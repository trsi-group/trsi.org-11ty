name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Create mock CMS data for testing
      run: |
        mkdir -p cms/data
        echo '{"productions":[]}' > cms/data/productions.json
        echo '{"graphics":[]}' > cms/data/graphics.json
        echo '{"music":[]}' > cms/data/music.json
        echo '{"members":[]}' > cms/data/members.json
        echo '{"posts":[]}' > cms/data/posts.json
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Run integration tests
      run: npm run test:integration
    
    - name: Build CSS
      run: npm run build:css
    
    - name: Build site
      run: npx eleventy
    
    - name: Run E2E tests
      run: npm run test:e2e
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false
    
    - name: Upload Playwright test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Fetch content from Contentful
      env:
        DELIVERY_TOKEN: ${{ secrets.DELIVERY_TOKEN }}
        MANAGEMENT_TOKEN: ${{ secrets.MANAGEMENT_TOKEN }}
        NODE_ENV: production
      run: npm run build:content
    
    - name: Build production site
      env:
        NODE_ENV: production
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: site-build
        path: dist/
        retention-days: 30
